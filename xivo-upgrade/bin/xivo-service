#!/bin/bash

PATH=/bin:/usr/bin:/sbin:/usr/sbin
action=$1
services_filter=$2
services="dahdi rabbitmq-server pf-xivo-sysconfd xivo-confgend xivo-provd xivo-agid asterisk xivo-agent xivo-ctid xivo-restapi monit"
monit_default="/etc/default/monit"
XIVO_DEFAULT_FILE="/etc/default/xivo"
no_monit=1

if [ "$services_filter" = "all" ]; then
    services="postgresql nginx $services"
fi

if [ "$services_filter" = "no_monit" ]; then
    services=$(/bin/echo $services | sed 's/monit//')
    no_monit=0
fi

reversed_services=$(/bin/echo $services | tac -s' ')

usage() {
    cat << EOF
    usage : $0 action [services_filter]
    availables actions :
        status  : print status of all xivo services
        restart : restart all xivo services
        stop    : stop all xivo services
        start   : start all xivo services

    availables services_filter :
        all      : add postgres and nginx to managed services
        no_monit : do not include monit

    impacted services : $services
EOF
    exit 0
}

xivo_status() {
    xivo-check-db
    echo "Checking services..."
    for service in $services; do
        if [ $service != "monit" ] ; then
            /etc/init.d/$service status &> /dev/null
            if [ $? -eq 0 ]; then
                echo -e "\tOK\t$service"
            else
                echo -e "\tNOK\t$service"
            fi
        fi
    done
}

disable_monit() {
    if [ $no_monit -eq 1 ]; then
        sed -i 's/startup=1/startup=0/' $monit_default
    fi
}

enable_monit() {
    if [ $no_monit -eq 1 ]; then
        sed -i 's/startup=0/startup=1/' $monit_default
    fi
}

wait_asterisk_initialization() {
    grep -q RUNASTERISK=yes /etc/default/asterisk
    if [ $? -eq 0 ]; then
        while ! asterisk -rx 'core waitfullybooted' > /dev/null; do
            sleep 1
        done
    fi
}

xivo_start() {
    grep -q startup=no $XIVO_DEFAULT_FILE
    if [ $? -eq 0 ]; then
        echo "XiVO startup is disabled in $XIVO_DEFAULT_FILE"
        exit 0
    fi

    /sbin/iptables -I INPUT 1 -p udp --dport 5060 -j DROP
    enable_monit

    echo "Waiting for services to start successfully before opening port 5060."

    for service in $services; do
        if [ -f /etc/init.d/$service ]; then
            /usr/sbin/invoke-rc.d $service start 1> /dev/null
        fi
    done

    wait_asterisk_initialization

    /sbin/iptables -D INPUT -p udp --dport 5060 -j DROP
}

xivo_stop() {
    /sbin/iptables -I INPUT 1 -p udp --dport 5060 -j DROP
    disable_monit

    echo "Waiting for services to stop successfully."

    for service in $reversed_services; do
        if [ -f /etc/init.d/$service ]; then
            /usr/sbin/invoke-rc.d $service stop 1> /dev/null
        fi
    done
    /sbin/iptables -D INPUT -p udp --dport 5060 -j DROP
}

xivo_restart() {
    xivo_stop
    xivo_start
}

case $action in
    status)  xivo_status;;
    restart) xivo_restart;;
    start)   xivo_start;;
    stop)    xivo_stop;;
    *) usage;;
esac
