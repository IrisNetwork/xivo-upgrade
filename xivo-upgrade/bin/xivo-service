#!/bin/bash
action=$1
services="postgresql dahdi xivo-confgend pf-xivo-provd pf-xivo-agid asterisk xivo-ctid nginx monit"
reversed_services=$(echo $services | tac -s' ')

usage() {
    cat << EOF
    usage : $0 action
    availables actions :
        status  : print status of all xivo services
        restart : restart all xivo services
        stop    : stop all xivo services
        start   : start all xivo services

    impacted services : $services
EOF
    exit 0
}

xivo_status() {
    echo "checking services"
    for service in $services; do
        /etc/init.d/$service status &> /dev/null
        if [ $? -eq 0 ]; then
            echo -e "\tOK\t$service"
        else
            echo -e "\tNOK\t$service"
        fi
    done
}

xivo_start() {
    /sbin/iptables -I INPUT 1 -p udp --dport 5060 -j DROP
    for service in $services; do
        if [ -f /etc/init.d/$service ]; then
            /usr/sbin/invoke-rc.d $service start
        fi
    done
    status=$(asterisk -rx 'core waitfullybooted')
    while [ "$status" != "Asterisk has fully booted." ]; do
        sleep 1
        status=$(asterisk -rx 'core waitfullybooted')
    done
    /sbin/iptables -D INPUT -p udp --dport 5060 -j DROP
}

xivo_stop() {
    /sbin/iptables -I INPUT 1 -p udp --dport 5060 -j DROP
    for service in $reversed_services; do
        if [ -f /etc/init.d/$service ]; then
            /usr/sbin/invoke-rc.d $service stop
        fi
    done
    /sbin/iptables -D INPUT -p udp --dport 5060 -j DROP
}

xivo_restart() {
    xivo_stop
    xivo_start
}

case $action in
    status)  xivo_status;;
    restart) xivo_restart;;
    start)   xivo_start;;
    stop)    xivo_stop;;
    *) usage;;
esac
